#!/usr/bin/env bash
################################################################################
# Test objective: check if send copy monitors receives frames when its monitored
#                 VALE pipe is sending.
# Operations:
# 0) restart fd_server to have a clean starting state
# 1) create a pair of VALE pipes (pipe{1, pipe}1).
# 2) open a send copy monitor pipe{1/t for pipe{1.
# 3) send from pipe{1, check that both pipe{1/r and pipe}1 receive the frame.
################################################################################
source test_lib

restart_fd_server

# Pre-opening interface that will be needed. This is needed to avoid a race
# condition between the sending and receiving ports.
./functional -i "netmap:pipe{1"   &>/dev/null
check_exit $? "pre-open netmap:pipe{1"
./functional -i "netmap:pipe{1/t" &>/dev/null
check_exit $? "pre-open netmap:pipe{1/t"
./functional -i "netmap:pipe}1"   &>/dev/null
check_exit $? "pre-open netmap:pipe}1"

./functional -i "netmap:pipe{1/t" -r 150:d &>/dev/null &
p1=$!
./functional -i "netmap:pipe}1"   -r 150:d &>/dev/null &
p2=$!
./functional -i "netmap:pipe{1"   -t 150:d &>/dev/null &
e3=$?
wait $p1
e1=$?
wait $p2
e2=$?
check_exit $e1 "receive netmap:pipe{1/t"
check_exit $e1 "receive netmap:pipe}1"
check_exit $e2 "send netmap:pipe{1"

echo "Test successful."